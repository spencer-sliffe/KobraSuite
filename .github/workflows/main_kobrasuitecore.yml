name: Build and deploy Django app to Azure App Service

on:
  push:
    branches: 
      - main
  workflow_dispatch:

env:
  WEBAPP_NAME: 'kobrasuitecore'  # Replace with the name of your Azure web app

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python version
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Create and start virtual environment
      run: |
        cd kobrasuitecore
        python3 -m venv venv
        source venv/bin/activate

    - name: Install dependencies
      run: |
        cd kobrasuitecore
        pip install -r requirements.txt

    - name: Set environment variables for Django
        # Export environment variables directly OR write them to a .env file
      run: |
        cd kobrasuitecore
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
        echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env
        echo "CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }}" >> .env
        echo "DBHOST=${{ secrets.DBHOST }}" >> .env
        echo "DBNAME=${{ secrets.DBNAME }}" >> .env
        echo "DBUSER=${{ secrets.DBUSER }}" >> .env
        echo "DBPASS=${{ secrets.DBPASS }}" >> .env
        echo "DEBUG=${{ secrets.DEBUG }}" >> .env

    - name: Collect static
      run: |
        cd kobrasuitecore
        python manage.py collectstatic
    
    - name: Upload artifact for deployment jobs
      uses: actions/upload-artifact@v3
      with:
        name: python-app
        path: |
          ./kobrasuitecore
          !venv/
  
  deploy-to-webapp:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: python-app
          path: ./kobrasuitecore
      
      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}
    
      - name: Disable static collection and set migration command on App Service
        uses: Azure/appservice-settings@v1
        with:  
          app-name: ${{ env.WEBAPP_NAME }}
          app-settings-json: '[{ "name": "DISABLE_COLLECTSTATIC", "value": "true" }, { "name": "POST_BUILD_COMMAND",  "value": "python manage.py makemigrations && python manage.py migrate" }, { "name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "true" }, { "name": "DJANGO_ENV", "value": "production"}]'

      - name: Deploy to App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEBAPP_NAME}}
